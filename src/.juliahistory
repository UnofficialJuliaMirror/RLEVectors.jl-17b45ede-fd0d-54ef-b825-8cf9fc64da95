exit()
using RLEVectors
exit()
using RLEVectors
exit()
using RLEVectors
exit()
using RLEVectors
exit()
using RLEVectors
x = RLEVector([1,1,1,1,2,2,2,3,3,4,4,])
head(x)
foo = head(x)
typeof(foo)
foo = head(x)
foo
exit()
using RLEVectors
using RLEVectors
using RLEVectors
using DataFrames
@doc RLEDataFrame
?RLEDataFrame
?RLEVector
exit()
?RLEDataFrame
?RLEVecror
using RLEVectors
?RLEDataFrame
RLEDataFrame(a=RLEVector([1, 1, 2, 2, 2]), b=RLEVector([2, 3, 3, 3, 3]))
using RLEVectors
RLEDataFrame( [ Rle([1, 1, 2]), Rle([2, 2, 2]) ], [:a, :b] )
RLEDataFrame( [ RleVector([1, 1, 2]), RleVector([2, 2, 2]) ], [:a, :b] )
RLEDataFrame( [ RLEVector([1, 1, 2]), RLEVector([2, 2, 2]) ], [:a, :b] )
RLEDataFrame( [ RLEVector([1, 1, 2]), RLEVector([2, 2, 2]) ], [:a :b] )
[:a, :b]
[RLEVector([1, 1, 2]), RLEVector([2, 2, 2])]
RLEDataFrame( [RLEVector([1, 1, 2]), RLEVector([2, 2, 2])], [:a, :b] )
exit()
using RLEVectors
Index([:a, :b])
DataFrames.Index([:a, :b])
Index
Index([:a, :b])
using DataFrames
Index([:a, :b])
exit()
using DataFrames
using RLEVectors
exit()
using RLEVectors
exit()
using RLEVectors
length(intersect(x, y))
length(x)
using RLEVectors
tail(x)
x
y
foo
goo
foo
goo
length(x)
length(y)
length(foo)
length(goo)
y[1249]
y[1250]
y
x
x[834]
goo = goo[1:1667]
x[834]
goo = goo[1:1667]
for i in 1:1 println("YOI") end
goo = goo[1:1667]
x[834]
bob = 7
for i in 1:100 bob = 22; end
bob
joe = [1, 2, 3, 4]
for i in 1:1 joe[4] = 22; end
joe
goo = goo[1:1668]
for i in 1:2 println("YOI") end
exit()
goo = goo[1:1670]
foo
goo = goo[1:1670]
bob = [1, 2, 3, 4]
bob
bob[3:2] = 4
bob
10.1 / 9.26
Profile.clear(); @profile for i in 1:1e6 disjoin2(x, y) end; ProfileView.view()
using ProfileView
ProfileView.view()
ProfileView.view()
10.04 / 9.84 
9.95 / 8.46
Profile.clear(); @profile for i in 1:1e6 disjoin2(x, y) end; ProfileView.view()
exit()
?const
?constant
?@inbounds
?@inbounds
runends(foo)
rends(foo)
foofoo
foo
rvalue(foo)
x = rend(foo)
x = rlast(foo)
x = rlast(foo)
@timeit searchsortedfirst([1000, 5000, 10000], x)
@timeit searchsortedfirst([1000, 5000, 10000], x)
5 > 2 ? 9 : 1
@timeit searchsortedfirst([1000, 5000, 10000], x)
@timeit searchsortedfirst2([1000, 5000, 10000], x)
@timeit searchsortedfirst2([1000, 5000, 10000], x)
@timeit searchsortedfirst2([1000, 5000, 10000], x)
@timeit searchsortedfirst([1000, 5000, 10000], x)
@timeit searchsortedfirst([1000, 5000, 10000], x)
@timeit for i in 1:100 searchsortedfirst([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
Uint
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
bob = UInt(5)
bob - 100
joe = bob - 100
joe
joe > 0
Int(joe)
convert(Int, joe)
joe + 0
Int(joe + 0)
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
using ProfileView
Profile.clear(); @profile for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end; ProfileView.view()
Profile.clear(); @profile for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end; ProfileView.view()
Profile.clear(); @profile for i in 1:1000 searchsortedfirst2([1000, 5000, 10000], x) end; ProfileView.view()
Profile.clear(); @profile for i in 1:10000 searchsortedfirst2([1000, 5000, 10000], x) end; ProfileView.view()
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
Profile.clear(); @profile for i in 1:100000 searchsortedfirst2([1000, 5000, 10000], x) end; ProfileView.view()
Profile.clear(); @profile for i in 1:100000 searchsortedfirst2([1000, 5000, 10000], x) end; ProfileView.view()
Profile.clear(); @profile for i in 1:1000000 searchsortedfirst2([1000, 5000, 10000], x) end; ProfileView.view()
Profile.clear(); @profile for i in 1:100000 searchsortedfirst2([x, x) end; ProfileView.view()
Profile.clear(); @profile for i in 1:100000 searchsortedfirst2(x, x) end; ProfileView.view()
searchsortedfirst2(x, x)
@time searchsortedfirst2(x, x)
@timeit searchsortedfirst2(x, x)
for i in 1:1000 searchsortedfirst2(x, x) end
for i in 1:10000 searchsortedfirst2(x, x) end
for i in 1:100000 searchsortedfirst2(x, x) end
for i in 1:100000 searchsortedfirst2(x, x) end
for i in 1:1000000 searchsortedfirst2(x, x) end
Profile.clear(); @profile for i in 1:1000000 searchsortedfirst2(x, x) end; ProfileView.view()
Profile.clear(); @profile for i in 1:10000000 searchsortedfirst2(x, x) end; ProfileView.view()
Profile.clear(); @profile for i in 1:10000000 searchsortedfirst2(x, x) end; ProfileView.view()
@timeit searchsortedfirst2(x, x)
@timeit searchsortedfirst2(x, x)
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst2([1000, 5000, 10000], x) end
using benchmark
using Benchmark
@timeit for i in 1:100 searchsortedfirst([1000, 5000, 10000], x) end
@timeit for i in 1:100 searchsortedfirst(x, x) end
@timeit for i in 1:100 searchsortedfirst2(x, x) end
5.5/4
@timeit for i in 1:100 searchsortedfirst2(x, x) end
@timeit for i in 1:100 searchsortedfirst2(x, x) end
@timeit for i in 1:100 searchsortedfirst(x, x) end
@timeit for i in 1:100 searchsortedfirst2(x, x) end
@timeit for i in 1:100 searchsortedfirst2(x, x) end
@timeit for i in 1:100 searchsortedfirst2(x, x) end
@timeit for i in 1:100 searchsortedfirst2(x, x) end
@timeit for i in 1:100 searchsortedfirst(x, x) end
 searchsortedfirst(x, x)
 searchsortedfirst(x, x)
 searchsortedfirst(x, x);
 searchsortedfirst2(x, x);
 searchsortedfirst2(x, x);
 searchsortedfirst2(x, x)
 searchsortedfirst2(x, x) ==  searchsortedfirst(x, x)
 searchsortedfirst2(x, x) ==  searchsortedfirst(x, x)
 searchsortedfirst2(x, Int(x))
x = [1 3 5 7 9]
x = [1,  3,  5,  7,  9]
 searchsortedfirst(x, x)
 searchsortedfirst2(x, x)
 searchsortedfirst2(x, x, 1, 3)
 searchsortedfirst2(x, x, 1, 100)
 searchsortedfirst2(x, x, 1, length(x))
 searchsortedfirst2(x, x, 1, length(x))
 searchsortedfirst2(x, x, 1, length(x))
 searchsortedfirst2([2, 4], x, 1, length(x))
 searchsortedfirst2([2, 4], x, 1, length(x))
x
 searchsortedfirst2([2, 4], x, 1, length(x))
x
length(x)
 searchsortedfirst2([2, 4], x, 1, length(x))
 searchsortedfirst2([2, 4], x, 1, length(x))
 searchsortedfirst2([2, 4], x, 1, length(x))
println(5)
println(56)
 searchsortedfirst2([2, 4], x, 1, length(x))
 searchsortedfirst2([2, 4], x, 1, length(x));
 searchsortedfirst2([2, 4], x, 1, length(x));
 searchsortedfirst2([2, 4], x, 1, length(x))
 searchsortedfirst2([2, 4], x, 1, length(x))
exit()
x = [1,  3,  5,  7,  9]
searchsortedfirst2(x, x)
searchsortedfirst2(x, x)
searchsortedfirst2(x, x)
searchsortedfirst2(x, x)
searchsortedfirst2(x, x)
searchsortedfirst2(x, x)
searchsortedfirst2(x, x)
x
x
searchsortedfirst2(x, x)
[1 2 3][0]
@inbounds [1 2 3][0]
searchsortedfirst2(x, x)
searchsortedfirst2(x, x)
searchsortedfirst2(x, x)
searchsortedfirst2(x, x)
searchsortedfirst2(x, x)
searchsortedfirst2(x, x, -5)
searchsortedfirst2(x, x, -5, 10)
searchsortedfirst2(x, x, -5, 10)
searchsortedfirst2(x, x, -5, 10)
x
searchsortedfirst2(x, x, -5, 10)
searchsortedfirst2(x, x, -5, length(x))
searchsortedfirst2(x, x, 1, length(x))
searchsortedfirst2(x, x, 1, length(x))
searchsortedfirst2(x, x, 1, length(x))
searchsortedfirst2(x, x, 1, length(x))
x
x
searchsortedfirst2(x, x, 1, length(x))
searchsortedfirst2(x, x, 1, length(x))
searchsortedfirst2(x, x, 1, length(x))
searchsortedfirst2(x, x, 1, length(x))
searchsortedfirst2(x, x, 1, length(x))
exit()
x = [1,  3,  5,  7,  9]
searchsortedfirst2(x, x, 1, length(x))
searchsortedfirst2(x, x, 1, length(x))
searchsortedfirst2(x, x, 1, length(x))
searchsortedfirst2(x, x, 1, length(x))
searchsortedfirst2(x, x, 1, length(x))
searchsortedfirst2(x, x, 1, length(x))
searchsortedfirst2(x, x, 1, length(x))
searchsortedfirst(x, x, 1, length(x))
searchsortedfirst(x, x, 1, length(x))
using RLEVectors
searchsortedfirst(x, x, 1, length(x))
x
foo = IntegerRle(Vector{Int32}(collect(1:1000)), Vector{Int32}(collect(5:5:5000)))
x = foo.runends
@timeit for i in 1:100 searchsortedfirst(x, x) end
@timeit for i in 1:100 searchsortedfirst(x, x) end
@timeit for i in 1:100 searchsortedfirst(x, x) end
@timeit for i in 1:100 searchsortedfirst2(x, x) end
using RLEVectors
?linspace
vcat( 1:4, 5:6 )
exit()
foo = IntegerRle(Vector{Int32}(collect(1:1000)), Vector{Int32}(collect(5:5:5000)))
@code_warntype findin(foo, [800, 200, 357] )
@timeit findin(foo, [800, 200, 357])
@timeit findin(foo, [800, 200, 357])
@timeit findin2(foo, [800, 200, 357])
@timeit findin2(foo, [800, 200, 357])
@timeit findin(foo, [800, 200, 357])
vcat[ [800, 200], [100, 500] )
vcat( [800, 200], [100, 500] )
vcat( [[800, 200], [100, 500]] )
hcat( [[800, 200], [100, 500]] )
median
middle
middle(2, 1)
?middle
isodd
?isodd
middle(sorted.runvalues[mid_run], sorted.runvalues[mid_run+1])
foo
x = foo
middle(sorted.runvalues[mid_run], sorted.runvalues[mid_run+1])
middle(500, 600)
middle([500, 600])
middle(3, 4)
exit()
using RLEVectors
exit()
using RLEVectors
exit()
using RLEVectors
x = [2, 4]
v = [1, 2, 3, 4, 5]
searchsortedfirst(v, x)
collect( 1:10 < 5 )
1:10 < 5
collect(1:10) < 5
exit()
using RLEVectors
?searchsortedfirst
exit()
using RLEVectors
?searchsortedfirst
exit()
using RLEVectors
?searchsortedfirst
?searchsortedfirst
exit()
