input = RLEVector([5,6,7])
indices = 2:4
value = RLEVector([5,6,7])
nrun_diff
run_right
x
nrun_diff
x
indices
value
run_left
run_right
run_remainder_right
run_right
x
run_left
x
indices = 7:8
value = RLEVector([3,3])
x
run_left
indices
value
run_left
x
run_right
run_left
run_left
nrun_out
x
x.runvalues[run_right_range]
x
x
value.runends
i_left
x
run_left
index_in_run_left
Pkg.test("RLEVectors")
exit()
@time coverage(gr)
@time coverage(gr)
@time coverage(gr)
@time coverage(gr)
@time coverage(gr)
coverage(gr)
?deleteat!
coverage(gr)
x = RLEVector([1,2,3,4,5,6,7,8])
x[2:6] = [9,9,9,9,9]
x
coverage(gr)
coverage(gr)
coverage(gr)
exit()
coverage(gr)
coverage(gr)
exit()
coverage(gr)
coverage(gr)
exit()
coverage(gr)
exit()
coverage(gr)
exit()
coverage(gr)
coverage(gr)
exit()
coverage(gr)
chr_ends(gr)
last(chr_ends(gr))
@which coverage(gr)
first(eachrange(gr))
(s,e) = first(eachrange(gr))
out
foo = collect(eachrange(gr))
(s,e) = foo[2]
out
(s,e) = foo[3]
out
exit()
coverage(gr)
exit()
coverage(gr)
coverage(gr)
exit()
coverage(gr)
coverage(gr)
coverage(gr)
coverage(gr)
foo = collect(eachrange(gr))
length(unique(foo))
coverage(gr)
coverage(gr)
coverage(gr)
deleteat!(collect(1:10), 3:4)
?deleteat!
coverage(gr)
coverage(gr)
coverage(gr)
coverage(gr)
coverage(gr)
coverage(gr)
coverage(gr)
coverage(gr)
coverage(gr)
coverage(gr)
coverage(gr)
@time coverage(gr)
@time coverage(gr)
@time coverage(gr)
@time coverage(gr)
@timeit coverage(gr)
Pkg.test("RLEVectors")
bdf
bdf
@timeit foo[801:900] = 1:100
@timeit foo[801:900] = 1:100
@timeit foo[801:900] = 1:100
@timeit foo[801:900] = 1:100
@timeit foo[801:900] = 1:100
bdf[:,10:21]
@timeit foo + 4
@timeit foo + 4
@timeit foo + 4
@timeit foo + 4
@timeit foo .+ 4
coverage(gr)
Profile.clear(); @profile coverage(gr); Profile.print()
foo
Profile.clear(); @profile for i in 1:100 y=x[107:133] done ; Profile.print()
Profile.clear(); @profile for i in 1:100 y=x[107:133]; done ; Profile.print()
Profile.clear(); @profile for i in 1:100 y=foo[107:133]; done ; Profile.print()
Profile.clear(); @profile foo[107:133]; Profile.print()
Profile.clear(); @profile for i in 1:100 y=foo[107:133] done end; Profile.print()
Profile.clear(); @profile for i in 1:100 y=foo[107:133] ; done; end; Profile.print()
Profile.clear(); @profile for i in 1:1000 y=foo[107:133] ; done; end; Profile.print()
Profile.clear(); @profile for i in 1:10000 y=foo[107:133] ; done; end; Profile.print()
Profile.clear(); @profile for i in 1:10000 y=foo[107:133] ; done; end; Profile.print()
bdf
bdf
bdf
bdf
bdf[:,10:21]
bdf
x = RLEVector([1,2,3,4,5,6,7,8])
x[3:4]
Profile.clear(); coverage(gr); Profile.print()
coverage(gr)
@time coverage(gr)
Profile.clear(); @profile for i in 1:10 coverage(gr); done; end; Profile.print()
bdf
bdf[:,11:21]
bdf[:,11:end]
bdf=bdf[1:2,:]
bdf
bdf[:,11:end]
x = RLEVector([1,2,1,3,3])
x[2] = 2
x
x[2] = 1
x
x = RLEVector([1,2,3,4,5])
x[2] = 1
x
x = RLEVector([1,2,3,4,5])
x[2] = 3
x
bdf
bdf[:,5:8]
bdf[:,5:8]
foo[800] = 5
foo[800] = 5
foo[800] = 5
foo[800] = 5
ind2run(foo,800)
ind2run(foo,800)
foo.runindices[160]
foo.runends[160]
foo.runends[161]
foo.runends[159]
Pkg.test("RLEVectors")
exit()
