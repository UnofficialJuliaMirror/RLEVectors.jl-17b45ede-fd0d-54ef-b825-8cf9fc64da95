rle = RLEVector( repeat( ["a","b","c","d","e"], inner=20 ) )
using RLEVectors
rle = RLEVector( repeat( ["a","b","c","d","e"], inner=20 ) )
x = collect(1:100)
group_means = Float64[ mean(x[a:b]) for (x,a,b) in each(rle) ]
group_means = Float64[ mean(x[a:b]) for (v,a,b) in each(rle) ]
group_means = Float64[ mean(x[a:b]) for (v,a,b) in each(rle) ]
group_means = Float64[ mean(x[r]) for (v,r) in each(rle) ]
rle2 = RLEVector( repeat( [1,2,3,4,5], inner=20 ) )
scaled_group_means = Float64[ v * mean(x[r]) for (v,r) in each(rle2) ]
fun = mean
?sort
tapply( x, rle, mean )
factor = repeat( ["a","b","c","d","e"], inner=20 )
rle = RLEVector( factor )
x = collect(1:100)
group_means = Float64[ mean(x[r]) for (v,r) in each(rle) ]
tapply( x, rle, mean )

tapply( x, factor, mean )

rle = RLEVector( factor )
x = collect(1:100)
group_means = Float64[ mean(x[r]) for (v,r) in each(rle) ]
tapply( x, rle, mean )

exit()
using RLEVectors
exit()
using RLEVectors
exit()
using RLEVectors
using RLEVectors
using RLEVectors
exit()
using RLEVectors
exit()
using RLEVectors
using RLEVectors
?tapply
?tapply
exit()
using RLEVectors
?tapply
exit()
using RLEVectors
?tapply
exit()
using RLEVectors
?tapply
factor
tapply_res
collectx
x
tapply(res)
tapply_res
tapply( x, factor, mean )
tapply( x, factor, mean )
exit()
using RLEVectors
tapply( x, rle, mean )
throw(ArgumentError("Arguments 'x' and 'factor' must have the same length."))
exit()
using RLEVectors
length(x
)
length(factor)
tapply( x, factor, mean )
exit()
